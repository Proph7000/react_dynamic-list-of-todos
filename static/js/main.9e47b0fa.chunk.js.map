{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","React","memo","todos","handleShowTodoModal","selectedTodoId","className","map","todo","id","completed","classnames","title","type","onClick","TodoFilter","query","setQuery","selectValue","setSelectValue","value","onChange","event","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","getUser","userId","Loader","TodoModal","todoId","showTodoModal","resetTodoId","useState","user","setUser","a","userFromServer","useEffect","loadUser","undefined","href","email","name","App","setTodos","setSelectedTodoId","selectedTodo","setSelectedTodo","setShowTodoModal","todosFromServer","loadTodos","visibleTodos","filter","string","substring","toLocaleLowerCase","includes","length","Number","currentTarget","dataset","todoid","find","todoa","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9e47b0fa.chunk.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  handleShowTodoModal: (event: React.MouseEvent<HTMLButtonElement>) => void,\n  selectedTodoId: number,\n};\n\nexport const TodoList: React.FC<Props> = React.memo(\n  ({\n    todos, handleShowTodoModal, selectedTodoId,\n  }) => (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          return (\n            <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n              <td className=\"is-vcentered\">\n                {todo.id}\n              </td>\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={classnames(\n                  { 'has-text-danger': !todo.completed },\n                  { 'has-text-success': todo.completed },\n                )}\n                >\n                  { todo.title }\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  data-todoid={todo.id}\n                  onClick={handleShowTodoModal}\n                >\n                  <span className=\"icon\">\n                    <i className={classnames('far',\n                      { 'fa-eye': selectedTodoId !== todo.id },\n                      { 'fa-eye-slash': selectedTodoId === todo.id })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  ),\n);\n","import React from 'react';\n\ntype Props = {\n  query: string,\n  setQuery: React.Dispatch<React.SetStateAction<string>>,\n  selectValue: string,\n  setSelectValue: React.Dispatch<React.SetStateAction<string>>,\n};\n\nexport const TodoFilter: React.FC<Props> = React.memo(\n  ({\n    query, setQuery, selectValue, setSelectValue,\n  }) => (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectValue}\n            onChange={(event) => setSelectValue(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => {\n            setQuery(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  ),\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n\nexport function isContains(string: string, substring: string): boolean {\n  return string.toLocaleLowerCase().includes(substring.toLocaleLowerCase());\n}\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo,\n  todoId: number,\n  showTodoModal: React.Dispatch<React.SetStateAction<boolean>>,\n  resetTodoId: React.Dispatch<React.SetStateAction<number>>,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo, todoId, showTodoModal, resetTodoId,\n}) => {\n  const [user, setUser] = useState<User>();\n\n  async function loadUser() {\n    const userFromServer = await getUser(todo.userId);\n\n    setUser(userFromServer);\n  }\n\n  useEffect(() => {\n    loadUser();\n  }, []);\n\n  function handleCloseTodoModal() {\n    showTodoModal(false);\n    resetTodoId(0);\n  }\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {user === undefined ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todoId}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleCloseTodoModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              { todo.title }\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={user?.email}>\n                { user?.name }\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos, isContains } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n  const [selectedTodo, setSelectedTodo] = useState<Todo>(todos[0]);\n  const [showTodoModal, setShowTodoModal] = useState(false);\n  const [query, setQuery] = useState('');\n  const [selectValue, setSelectValue] = useState('all');\n\n  async function loadTodos() {\n    const todosFromServer = await getTodos();\n\n    setTodos(todosFromServer);\n  }\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  let visibleTodos = query ? (\n    todos.filter(todo => isContains(todo.title, query))\n  ) : (\n    todos\n  );\n\n  switch (selectValue) {\n    case 'active':\n      visibleTodos = visibleTodos.filter(todo => (\n        todo.completed === false\n      ));\n      break;\n\n    case 'completed':\n      visibleTodos = visibleTodos.filter(todo => (\n        todo.completed === true\n      ));\n      break;\n\n    default:\n      break;\n  }\n\n  const handleShowTodoModal = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const todoId = Number(event.currentTarget.dataset.todoid);\n    const todo = todos.find(todoa => todoa.id === todoId) as Todo;\n\n    setSelectedTodo(todo);\n    setSelectedTodoId(todoId);\n    setShowTodoModal(true);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                selectValue={selectValue}\n                setSelectValue={setSelectValue}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={visibleTodos}\n                  handleShowTodoModal={handleShowTodoModal}\n                  selectedTodoId={selectedTodoId}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {showTodoModal\n        && (\n          <TodoModal\n            todo={selectedTodo}\n            todoId={selectedTodoId}\n            showTodoModal={setShowTodoModal}\n            resetTodoId={setSelectedTodoId}\n          />\n        )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}